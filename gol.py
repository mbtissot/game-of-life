#!/usr/bin/python3

import os
from pynput import keyboard
from funcs import *

grid = []
charb = '⬛'
charw = '⬜'


grid = [['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛', '⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬜','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬜','⬜','⬜','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛'],
        ['⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛','⬛', '⬛','⬛','⬛','⬛','⬛','⬛','⬛']]




'''for j in range(16): # number of rows
	row = [charb for i in range(25)] # number of columns
	grid.append(row)'''

view(grid)

def on_press(key):
	global grid
	if key == keyboard.Key.space:
		grid = update(grid)
		os.system('clear')
		view(grid)
	elif key == keyboard.Key.esc:
		return False
	else:
		pass

# Collect events until released
with keyboard.Listener(on_press=on_press) as listener:
	listener.join()